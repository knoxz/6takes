const WaitBox={show:()=>{document.body.insertAdjacentHTML("beforeend",'<div class="waitbox"></div>')},hide:()=>{const t=document.querySelector(".waitbox");null!=t&&t.remove()}};class Card{constructor(t,e,s){this.idx=t,this.num=e,this.cattle=s}toDiv(){var t=Array.from({length:this.cattle},()=>'<img src="/static/skull-solid.svg">').join("");return`
            <div class="card" data-idx="${this.idx}">
                <div class="skulls top">${t}</div>
                <div class="num">${this.num}</div>
            </div>`}}class Deck{update(t){this.cards=t}display(e){const s=document.querySelector(".player-deck");s.innerHTML="",this.cards.forEach(t=>{s.insertAdjacentHTML("beforeend",t.toDiv())}),s.querySelectorAll(".card").forEach(t=>{t.addEventListener("click",t=>{WaitBox.show();t=t.target.dataset.idx;console.log("posting",t),e(t)})})}}class Table{constructor(){this.rows=[]}update(t){this.rows=t}display(){const e=document.querySelector(".table");e.innerHTML="",this.rows.forEach(t=>{t=`<div class="row">${t.map(t=>t.toDiv()).join("")}</div>`;e.insertAdjacentHTML("beforeend",t)})}}const NUM=0,CATTLE=1;class Game{constructor(){this.table=new Table,this.deck=new Deck}start(){this.postMove(-1)}display(t){const e=(t,e)=>new Card(e,t[NUM],t[CATTLE]),s=t=>0<t.num;var i=t.piles.map(t=>Array.from(t,e).filter(s)),i=(this.table.update(i),Array.from(t.hand_cards,e).filter(s)),i=(this.deck.update(i),Object.entries(t.player_dict).map(t=>{return{name:t[0],sum:t[1].penalty_sum}}));this.displayPoints(i),this.table.display(),this.deck.display(t=>this.postMove(t))}displayPoints(t){const e=document.querySelector(".points");e.innerHTML="",t.forEach(t=>{t.sum*=-1;t=`
                <div class="entry ${t.name}">
                    <div>${t.name}</div>
                    <div class="sum">${t.sum}</div>
                </div>`;e.insertAdjacentHTML("beforeend",t)})}postMove(t){jQuery.ajax("make_action",{data:JSON.stringify({action:t}),contentType:"application/json",type:"POST"}).done(t=>{this.display(t),WaitBox.hide()})}}const G=new Game;window.addEventListener("DOMContentLoaded",()=>G.start());